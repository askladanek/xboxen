{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","xboxType","currencyType","money","xboxes","handleSubmit","bind","handleChangeType","handleChangeCurrency","handleChangeMoney","e","preventDefault","xboxPrice","this","temp","setState","console","log","a","target","value","d","parseInt","b","c","className","style","Form","onSubmit","Group","size","FormLabel","Control","as","onChange","option","type","required","Button","variant","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4d54336.chunk.js","sourcesContent":["import { Form, FormLabel } from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport React, {Component} from 'react';\n\nexport class App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      xboxType: 0,\n      currencyType: 0,\n      money: 0,\n      xboxes: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeType = this.handleChangeType.bind(this);\n    this.handleChangeCurrency = this.handleChangeCurrency.bind(this);\n    this.handleChangeMoney = this.handleChangeMoney.bind(this);\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    let xboxPrice = 299\n    if(this.state.xboxType === 2){ /* xbox one */\n      xboxPrice = 399\n    }else if(this.state.xboxType === 3){ /* xbox series s */\n      xboxPrice = 300\n    }else if(this.state.xboxType === 4){  /* xbox series x */\n      xboxPrice = 500\n    }\n    let temp = (this.state.money)/(xboxPrice/(1*(1+0.19*(this.state.currencyType))))\n    this.setState({xboxes: temp})\n    console.log(temp)\n  }\n  handleChangeType(a){\n    console.log(a.target.value)\n    let d = parseInt(a.target.value)\n    this.setState({xboxType: d})\n  }\n  handleChangeCurrency(b){\n    console.log(b.target.value)\n    let d = parseInt(b.target.value)\n    this.setState({currencyType: d})\n  }\n  handleChangeMoney(c){\n    console.log(c.target.value)\n    let d = parseInt(c.target.value)\n    this.setState({money: d})\n  }\n  render(){\n    return (\n      <div className=\"App\" style={{\"padding\":\"5%\"}}>\n        <br></br>\n        <label>\n          How many xboxes can this amount of money buy?\n        </label>\n        <Form\n          onSubmit={e => this.handleSubmit(e)}\n        >\n          <Form.Group size=\"lg\">\n            <FormLabel>\n              Select xbox type:\n            </FormLabel>\n            <Form.Control as=\"select\" onChange={this.handleChangeType}\n            >\n              <option value={0}\n              >xbox</option>\n              <option value={1}\n              >360</option>\n              <option value={2}\n              >one</option>\n              <option value={3}\n              >series S</option>\n              <option value={4}\n              >series X</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group size=\"lg\">\n            <FormLabel>\n              Select currency type:\n            </FormLabel>\n            <Form.Control as=\"select\" onChange={this.handleChangeCurrency}>\n              <option option value={0}\n              >$</option>\n              <option option value={1}\n              >â‚¬</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group size=\"lg\">\n            <FormLabel>\n              Input the amount of money:\n            </FormLabel>\n            <Form.Control as=\"input\" type=\"number\" required \n            onChange={this.handleChangeMoney}\n            >\n            </Form.Control>\n          </Form.Group>\n          <Button variant=\"success\" onClick={e => this.handleSubmit(e)}>\n            Submit\n          </Button>\n        </Form>\n        <br></br>\n        <label>\n          You can buy {this.state.xboxes} xboxes\n        </label>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}